import numpy;
freq = 60; # Hz
omega = 2*numpy.pi*freq;

## results from OpenDSS ## 

rmatrix = [[0.000206218, 0.000059218, 0.000059218, 0.000059218, 0.000059218],
[0.000059218, 0.000206218, 0.000059218, 0.000059218, 0.000059218],
[0.000059218, 0.000059218, 0.000206218, 0.000059218, 0.000059218],
[0.000059218, 0.000059218, 0.000059218, 0.000277018, 0.000059218],
[0.000059218, 0.000059218, 0.000059218, 0.000059218, 0.000277018]]
xmatrix= [[0.000861526, 0.000387241, 0.000334979, 0.000332693, 0.000299504],
[0.000387241, 0.000861526, 0.000387241, 0.000318154, 0.000318154],
[0.000334979, 0.000387241, 0.000861526, 0.000299504, 0.000332693],
[0.000332693, 0.000318154, 0.000299504, 0.000894326, 0.000304407],
[0.000299504, 0.000318154, 0.000332693, 0.000304407, 0.000894326]]
cmatrix= [[0.008, -0.002, -0.001, -0.001, -0.000],
[-0.002, 0.008, -0.002, -0.001, -0.001],
[-0.001, -0.002, 0.008, -0.000, -0.001],
[-0.001, -0.001, -0.000, 0.007, -0.001],
[-0.000, -0.001, -0.001, -0.001, 0.007]]

GprimMatrix = [[   0.4365469929 , -0.1472609851 , -0.05995437487 , -0.1083482761 , -0.05153326429 , -0.4365469929 ,  0.1472609851 , 0.05995437487 ,  0.1083482761 , 0.05153326429],
[  -0.1472609851 ,  0.4768205051 , -0.1472609851 , -0.06777849761 , -0.06777849761 ,  0.1472609851 , -0.4768205051 ,  0.1472609851 , 0.06777849761 , 0.06777849761 ],
[  -0.05995437487 , -0.1472609851 ,  0.4365469929 , -0.05153326429 , -0.1083482761 , 0.05995437487 ,  0.1472609851 , -0.4365469929 , 0.05153326429 ,  0.1083482761 ],
[  -0.1083482761 , -0.06777849761 , -0.05153326429 ,  0.4567770132 , -0.09829324725 ,  0.1083482761 , 0.06777849761 , 0.05153326429 , -0.4567770132 , 0.09829324725 ],
[  -0.05153326429 , -0.06777849761 , -0.1083482761 , -0.09829324725 ,  0.4567770132 , 0.05153326429 , 0.06777849761 ,  0.1083482761 , 0.09829324725 , -0.4567770132 ],
[  -0.4365469929 ,  0.1472609851 , 0.05995437487 ,  0.1083482761 , 0.05153326429 ,  0.4365469929 , -0.1472609851 , -0.05995437487 , -0.1083482761 , -0.05153326429 ],
[   0.1472609851 , -0.4768205051 ,  0.1472609851 , 0.06777849761 , 0.06777849761 , -0.1472609851 ,  0.4768205051 , -0.1472609851 , -0.06777849761 , -0.06777849761 ],
[  0.05995437487 ,  0.1472609851 , -0.4365469929 , 0.05153326429 ,  0.1083482761 , -0.05995437487 , -0.1472609851 ,  0.4365469929 , -0.05153326429 , -0.1083482761 ],
[   0.1083482761 , 0.06777849761 , 0.05153326429 , -0.4567770132 , 0.09829324725 , -0.1083482761 , -0.06777849761 , -0.05153326429 ,  0.4567770132 , -0.09829324725 ],
[  0.05153326429 , 0.06777849761 ,  0.1083482761 , 0.09829324725 , -0.4567770132 , -0.05153326429 , -0.06777849761 , -0.1083482761 , -0.09829324725 ,  0.4567770132 ]]

BprimMatrix = [
[ -1.514862704,  0.3858347934,  0.2506269622,  0.2600523577,  0.1817056428,   1.514864128, -0.3858350779, -0.2506270937, -0.2600525331, -0.1817057334],
[ 0.3858347934,  -1.573462642,  0.3858347934,  0.2050540553,  0.2050540553, -0.3858350779,   1.573464112, -0.3858350779, -0.2050541778, -0.2050541778],
[ 0.2506269622,  0.3858347934,  -1.514862704,  0.1817056428,  0.2600523577, -0.2506270937, -0.3858350779,   1.514864128, -0.1817057334, -0.2600525331],
[ 0.2600523577,  0.2050540553,  0.1817056428,  -1.294759994,  0.1998600362, -0.2600525331, -0.2050541778, -0.1817057334,   1.294761249, -0.1998601767],
[ 0.1817056428,  0.2050540553,  0.2600523577,  0.1998600362,  -1.294759994, -0.1817057334, -0.2050541778, -0.2600525331, -0.1998601767,   1.294761249],
[  1.514864128, -0.3858350779, -0.2506270937, -0.2600525331, -0.1817057334,  -1.514862704,  0.3858347934,  0.2506269622,  0.2600523577,  0.1817056428],
[-0.3858350779,   1.573464112, -0.3858350779, -0.2050541778, -0.2050541778,  0.3858347934,  -1.573462642,  0.3858347934,  0.2050540553,  0.2050540553],
[-0.2506270937, -0.3858350779,   1.514864128, -0.1817057334, -0.2600525331,  0.2506269622,  0.3858347934,  -1.514862704,  0.1817056428,  0.2600523577],
[-0.2600525331, -0.2050541778, -0.1817057334,   1.294761249, -0.1998601767,  0.2600523577,  0.2050540553,  0.1817056428,  -1.294759994,  0.1998600362],
[-0.1817057334, -0.2050541778, -0.2600525331, -0.1998601767,   1.294761249,  0.1817056428,  0.2050540553,  0.2600523577,  0.1998600362,  -1.294759994]
]


print("Rmatrix: ohm/m");
print(rmatrix);
print("Xmatrix: ohm/m");
print(xmatrix);
# print("Pmatrix: m/uF");
# print(Pmatrix);
print("Cmatrix: nF/m");
print(cmatrix);

zmatrix = 1000*(numpy.multiply(1j, xmatrix) + rmatrix)
ymatrix = numpy.linalg.inv(zmatrix); # 1/ohm

print("Zmatrix: (ohm)");
print(zmatrix);

print("Ymatrix: (1/ohm)");
print(ymatrix);

ycMatrix = numpy.multiply(1j*(omega/2)*10**-9, cmatrix)

yprimMatrix = ymatrix + ycMatrix
gPrimMatrix = numpy.real(yprimMatrix);
bPrimMatrix= numpy.imag(yprimMatrix);
print("g prim matrix");
print(gPrimMatrix)
print("bPrimMatrix")
print(bPrimMatrix)
